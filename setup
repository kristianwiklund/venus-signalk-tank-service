#!/bin/bash

RCLOCAL="/data/rc.local"
SIGNALKTANK="`pwd`/signalktank.py"
MY_GUI_DIR="./gui/${HOSTNAME}/"
VENUS_OVERVIEW_QML="/opt/victronenergy/gui/qml/OverviewMobile.qml"
MY_OVERVIEW_QML="${MY_GUI_DIR}OverviewMobile.qml"
VENUS_TANK_QML="/opt/victronenergy/gui/qml/TileTank.qml"
MY_TANK_QML="${MY_GUI_DIR}TileTank.qml"
SED_SCRIPT="./sed.txt"

clear
echo "Answer the following questions to tailor installation to suit"
echo "your requirements. You can type "help" at any time to get more"
echo "information."
echo ""

response=""
while [ "${response}" != "y" ] && [ "${response}" != "n" ] ; do
    if [ "${response}" == "help" ] ; then
        echo  ""
        echo "Answering 'y' to this question will add a command to ${RCLOCAL}"
        echo "that will start any configured Signal K tank services each time"
        echo "Venus boots. If ${RCLOCAL} does not exist it will be created."
        echo "Answering 'n' will delete any existing autostart command from"
	echo "${RCLOCAL}."
    fi
    echo ""
    echo -n "Start Signal K tank services when Venus boots (y/n)? "
    read -e response rubbish
    case ${response} in
        y)  if [ -f "${RCLOCAL}" ] ; then
                grep -v "${SIGNALKTANK}" "${RCLOCAL}" > temp
    		mv -f temp "${RCLOCAL}"
	    else
		echo "#!/bin/bash" > "${RCLOCAL}"
	    fi
	    chmod 755 "${RCLOCAL}"
	    echo "${SIGNALKTANK} &" >> "${RCLOCAL}"
	    ;;
        n)  if [ -f "${RCLOCAL}" ] ; then
		grep -v "${SIGNALKTANK}" "${RCLOCAL}" > temp
    		mv -f temp "${RCLOCAL}"
	    fi
	    ;;
        help)
            ;;
        *)  echo "invalid response - must be 'y', 'n' or 'help'"
	    ;;
    esac
done

if [ -d "${MY_GUI_DIR}" ] ; then
	response=""
	while [ "${response}" != "o" ] && [ "${response}" != "t" ] && [ "${response}" != "n" ] ; do
    		if [ "${response}" == "help" ] ; then
        		echo  ""
        		echo "This option allows the installation of some enhancements to"
        		echo "the Venus mobile overview GUI page".
			echo "Option 't' leaves the Venus mobile overview page untouched,"
        		echo "but replaces the default tank display element (TileTank.qml)"
			echo "with a version that allows the page to display more than four"
        		echo "tanks".
        		echo "Option 'o' replaces the Venus mobile overview page (OverviewMobile.qml)"
			echo "and the tank display element (TileTank.qml) with versions"
        		echo "that present the display shown in README.md."
        		echo "Answering 'n' will remove any installed enhancements reverting"
			echo "the Venus GUI to its default state."
    		fi
    		echo ""
    		echo -n "Install enhanced GUI components (o/t/n)? "
    		read -e response rubbish
    		case ${response} in
        		o)  	if [ ! -f "${VENUS_OVERVIEW_QML}.orig" ] ; then
	        			cp "${VENUS_OVERVIEW_QML}" "${VENUS_OVERWIEW_QML}.orig"
            			fi
            			cp "${MY_OVERVIEW_QML}" "${VENUS_OVERVIEW_QML}"
            			if [ ! -f "${VENUS_TANK_QML}.orig" ] ; then
	        			cp "${VENUS_TANK_QML}" "${VENUS_TANK_QML}.orig"
            			fi
            			cp "${MY_TANK_QML}" "${VENUS_TANK_QML}"
	    			;;
        		t)  	if [ ! -f "${VENUS_TANK_QML}.orig" ] ; then
	        			cp "${VENUS_TANK_QML}" "${VENUS_TANK_QML}.orig"
            			fi
            			cp "${MY_TANK_QML}" "${VENUS_TANK_QML}"
            			;;
        		n)  	if [ -f "${VENUS_OVERVIEW_QML}.orig" ] ; then
					cp "${VENUS_OVERVIEW_QML}.orig" "${VENUS_OVERVIEW_QML}"
	    			fi
            			if [ -f "${VENUS_TANK_QML}.orig" ] ; then
					cp "${VENUS_TANK_QML}.orig" "${VENUS_TANK_QML}"
	    			fi
	    			;;
        		help)
            			;;
        		*)  	echo "invalid response - must be 'o', 't' or 'help'"
	    			;;
    		esac
	done
	svc -d /service/gui
	svc -u /service/gui
else
	echo "Skipping GUI configuration because support is only available for"
	echo "devices with 'ccgx' and 'einstein' hostnames." 
fi


response=""
while [ "${response}" != "y" ] && [ "${response}" != "n" ] ; do
    if [ "${response}" == "help" ] ; then
        echo  ""
        echo "Answering 'y' to this question will modify the mobile overwiew"
        echo "display so that all CAN-derived tank services are ignored. This"
	echo "is almost certainly what you want if all tank data is being"
	echo "derived from Signal K in order to correct buggy CAN tank data"
        echo "handling."
        echo "Answering 'n' to this question will reinstate CAN-derived tank"
	echo "data services"
    fi
    echo ""
    echo -n "Mask CAN-derived tank services (y/n)? "
    read -e response rubbish
    case ${response} in
        y)  if [ ! -f "${VENUS_OVERVIEW_QML}.orig" ] ; then
	        cp "${VENUS_OVERVIEW_QML}" "${VENUS_OVERWIEW_QML}.orig"
            fi
            sed -i -f ${SED_SCRIPT} "${VENUS_OVERVIEW_QML}"
	    ;;
        n)  if [ -f "${VENUS_OVERVIEW_QML}.orig" ] ; then
		cp "${VENUS_OVERVIEW_QML}.orig" "${VENUS_OVERVIEW_QML}"
	    fi
	    ;;
        help)
            ;;
        *)  echo "invalid response - must be 'y', 'n' or 'help'"
	    ;;
    esac
done
svc -d /service/gui
svc -u /service/gui
